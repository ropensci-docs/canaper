[{"path":"https://docs.ropensci.org/canaper/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"CONTRIBUTING","title":"CONTRIBUTING","text":"package initially stable state development, great deal active subsequent development envisioned. Contributions canaper welcome! Please read documentation proceeding.","code":""},{"path":"https://docs.ropensci.org/canaper/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"CONTRIBUTING","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://docs.ropensci.org/canaper/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"CONTRIBUTING","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://docs.ropensci.org/canaper/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"CONTRIBUTING","text":"recommend create Git branch pull request (PR). Look build status (R-CMD-check badge) making changes. recommend tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://docs.ropensci.org/canaper/CONTRIBUTING.html","id":"prefer-to-email","dir":"","previous_headings":"","what":"Prefer to Email?","title":"CONTRIBUTING","text":"Email person listed maintainer DESCRIPTION file repo. Though note private discussions email don’t help others - course email totally warranted ’s sensitive problem kind.","code":""},{"path":"https://docs.ropensci.org/canaper/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"CONTRIBUTING","text":"Please note package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://docs.ropensci.org/canaper/CONTRIBUTING.html","id":"thanks-for-contributing","dir":"","previous_headings":"","what":"Thanks for contributing!","title":"CONTRIBUTING","text":"contributing guide adapted tidyverse contributing guide available https://raw.githubusercontent.com/r-lib/usethis/master/inst/templates/tidy-contributing.md","code":""},{"path":"https://docs.ropensci.org/canaper/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 canaper authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.ropensci.org/canaper/articles/canape.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"CANAPE example","text":"Start loading canaper packages use vignette:","code":"library(canaper) # This package :) library(future) # For parallel computing library(tictoc) # For timing things library(patchwork) # For composing multi-part plots # For data-wrangling and plotting library(dplyr) library(tidyr) library(readr) library(ggplot2)"},{"path":"https://docs.ropensci.org/canaper/articles/canape.html","id":"dataset","dir":"Articles","previous_headings":"","what":"Dataset","title":"CANAPE example","text":"canaper package comes dataset used Mishler et al. (2014). Let’s load data memory: acacia dataset list including two items. first, phy, phylogeny Acacia species Australia: second, comm, community dataframe species columns rows sites. row names (sites) correspond centroids 50 x 50 km grid cells covering Australia. community matrix large print entirety, just take look first 8 rows columns1:","code":"data(acacia) acacia$phy #>  #> Phylogenetic tree with 510 tips and 509 internal nodes. #>  #> Tip labels: #>   Pararchidendron_pruinosum, Paraserianthes_lophantha, adinophylla, semicircinalis, aphanoclada, inaequilatera, ... #>  #> Rooted; includes branch lengths. dim(acacia$comm) #> [1] 3037  508 acacia$comm[1:8, 1:8] #>                   abbreviata acanthaster acanthoclada acinacea aciphylla acoma acradenia acrionastes #> -1025000:-1825000          0           0            0        0         0     0         0           0 #> -1025000:-1875000          0           0            0        0         0     0         0           0 #> -1025000:-1925000          0           0            0        0         0     0         0           0 #> -1025000:-1975000          0           0            0        0         0     0         0           0 #> -1025000:-2025000          0           0            0        0         0     0         0           0 #> -1025000:-2075000          0           0            0        0         0     0         0           0 #> -1025000:-2125000          0           0            0        0         0     0         0           0 #> -1025000:-2225000          0           0            0        0         0     0         0           0"},{"path":"https://docs.ropensci.org/canaper/articles/canape.html","id":"randomization-test","dir":"Articles","previous_headings":"","what":"Randomization test","title":"CANAPE example","text":"many metrics describe phylogenetic diversity ecological communities. know given metric statistically significant? One way randomization test. general process : Generate set random communities Calculate metric interest random community Compare observed values random values Observed values extremes (e.g, top lower 5% one-sided test, either top bottom 2.5% two-sided test) considered significantly less diverse random. main purpose canaper perform randomization tests. canaper generates random communities using vegan package. large number pre-defined randomization algorithms available vegan2, well option provide user-defined algorithm. Selecting appropriate algorithm trivial, can greatly influence results3. details pre-defined algorithms, see vegan::commsim(). example also demonstrates one strengths canaper: ability run randomizations parallel4. far time-consuming part CANAPE, since repeat calculations many (e.g., hundreds ) times across randomized communities obtain reliable results. , set number iterations (n_iterations; .e., number swaps used produce randomized community) fairly high community matrix large includes many zeros; thorough mixing swapping many times required completely randomize matrix. use low number random communities (n_reps) things finish relatively quickly; consider increasing n_reps “real” analysis5. use curveball randomization algorithm, maintains species richness abundance patterns randomizing species identity (Strona et al. 2014)6. Let’s take peek output. cpr_rand_test() produces lot columns. , pd_obs observed value phylogenetic diversity (PD). columns starting pd refer aspects randomization: pd_rand_mean mean PD across random communities, pd_rand_sd standard deviation PD across random communities, pd_obs_z standard effect size PD, etc. details column means, see cpr_rand_test().","code":"# Set a parallel back-end, with 2 CPUs running simultaneously plan(multisession, workers = 2)  # Uncomment this to show a progress bar when running cpr_rand_test() # progressr::handlers(global = TRUE) # nolint  # Set a random number generator seed so we get the same results if this is # run again set.seed(071421)  tic() # Set a timer # Run randomization test acacia_rand_res <- cpr_rand_test(   acacia$comm, acacia$phy,   null_model = \"curveball\",   n_reps = 20, n_iterations = 100000,   tbl_out = TRUE ) #> Warning: Abundance data detected. Results will be the same as if using presence/absence data (no abundance weighting is used). #> Warning: Dropping tips from the tree because they are not present in the community data:  #>  Pararchidendron_pruinosum, Paraserianthes_lophantha toc() # See how long it took #> 70.204 sec elapsed  # Switch back to sequential (non-parallel) mode plan(sequential) acacia_rand_res #> # A tibble: 3,037 × 55 #>    site       pd_obs pd_ra…¹ pd_ra…² pd_ob…³ pd_ob…⁴ pd_ob…⁵ pd_ob…⁶ pd_ob…⁷ pd_ob…⁸ pd_al…⁹ pd_al…˟ pd_al…˟ pd_al…˟ pd_al…˟ pd_al…˟ pd_al…˟ pd_al…˟ pd_al…˟ rpd_obs rpd_r…˟ rpd_r…˟ rpd_o…˟ rpd_o…˟ rpd_o…˟ rpd_o…˟ rpd_o…˟ rpd_o…˟  pe_obs pe_ra…˟ pe_ra…˟ pe_ob…˟ pe_ob…˟ pe_ob…˟ pe_ob…˟ pe_ob…˟ pe_ob…˟ #>    <chr>       <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 -1025000… 0.0145   0.0207 0.00432 -1.46         1      19      20    0.05    0.95  0.0355  0.0414 0.00779  -0.753       5      14      20    0.25    0.7    0.407   0.514  0.129   -0.827       4      16      20    0.2     0.8  2.47e-5 6.14e-5 5.92e-5  -0.619       3      17      20    0.15    0.85 #>  2 -1025000… 0.0382   0.0522 0.00704 -1.99         0      20      20    0       1     0.0680  0.0883 0.00651  -3.10        0      20      20    0       1      0.561   0.595  0.0944  -0.358       9      11      20    0.45    0.55 1.44e-4 2.82e-4 1.86e-4  -0.738       5      15      20    0.25    0.75 #>  3 -1025000… 0.0378   0.0371 0.00535  0.130       12       8      20    0.6     0.4   0.0572  0.0631 0.00797  -0.743       2      17      20    0.1     0.85   0.661   0.593  0.0941   0.724      16       4      20    0.8     0.2  1.71e-4 2.42e-4 1.62e-4  -0.439       7      13      20    0.35    0.65 #>  4 -1025000… 0.0570   0.0606 0.00758 -0.480        6      14      20    0.3     0.7   0.0858  0.104  0.0105   -1.77        0      20      20    0       1      0.664   0.586  0.0913   0.863      17       3      20    0.85    0.15 5.30e-4 3.56e-4 2.33e-4   0.748      17       3      20    0.85    0.15 #>  5 -1025000… 0.0409   0.0423 0.00836 -0.176       11       9      20    0.55    0.45  0.0542  0.0713 0.00904  -1.89        0      19      20    0       0.95   0.753   0.596  0.102    1.55       19       1      20    0.95    0.05 1.25e-4 2.20e-4 1.31e-4  -0.728       6      14      20    0.3     0.7  #>  6 -1025000… 0.00998  0.0102 0.00206 -0.0890      11       9      20    0.55    0.45  0.0276  0.0173 0.00742   1.39       18       2      20    0.9     0.1    0.361   0.695  0.337   -0.989       2      18      20    0.1     0.9  1.17e-5 3.86e-5 4.82e-5  -0.557       3      17      20    0.15    0.85 #>  7 -1025000… 0.0187   0.0230 0.00378 -1.14         3      17      20    0.15    0.85  0.0325  0.0390 0.00820  -0.782       2      16      20    0.1     0.8    0.575   0.619  0.189   -0.231      11       9      20    0.55    0.45 5.20e-5 9.07e-5 6.56e-5  -0.589       5      15      20    0.25    0.75 #>  8 -1025000… 0.0434   0.0516 0.00862 -0.955        4      16      20    0.2     0.8   0.0779  0.0956 0.00995  -1.78        1      19      20    0.05    0.95   0.557   0.544  0.100    0.125      12       8      20    0.6     0.4  4.32e-4 3.14e-4 1.24e-4   0.944      16       4      20    0.8     0.2  #>  9 -1025000… 0.0111   0.0104 0.00172  0.418       17       3      20    0.85    0.15  0.0168  0.0211 0.00715  -0.607       6      14      20    0.3     0.7    0.662   0.558  0.227    0.461      16       4      20    0.8     0.2  2.73e-5 1.94e-5 1.53e-5   0.521      17       3      20    0.85    0.15 #> 10 -1025000… 0.0903   0.0896 0.0114   0.0601      13       7      20    0.65    0.35  0.115   0.143  0.00775  -3.51        0      20      20    0       1      0.783   0.629  0.0760   2.02       19       1      20    0.95    0.05 5.07e-4 5.76e-4 2.10e-4  -0.328      10      10      20    0.5     0.5  #> # … with 3,027 more rows, 18 more variables: pe_alt_obs <dbl>, pe_alt_rand_mean <dbl>, pe_alt_rand_sd <dbl>, pe_alt_obs_z <dbl>, pe_alt_obs_c_upper <dbl>, pe_alt_obs_c_lower <dbl>, pe_alt_obs_q <dbl>, pe_alt_obs_p_upper <dbl>, pe_alt_obs_p_lower <dbl>, rpe_obs <dbl>, rpe_rand_mean <dbl>, #> #   rpe_rand_sd <dbl>, rpe_obs_z <dbl>, rpe_obs_c_upper <dbl>, rpe_obs_c_lower <dbl>, rpe_obs_q <dbl>, rpe_obs_p_upper <dbl>, rpe_obs_p_lower <dbl>, and abbreviated variable names ¹​pd_rand_mean, ²​pd_rand_sd, ³​pd_obs_z, ⁴​pd_obs_c_upper, ⁵​pd_obs_c_lower, ⁶​pd_obs_q, ⁷​pd_obs_p_upper, ⁸​pd_obs_p_lower, #> #   ⁹​pd_alt_obs, ˟​pd_alt_rand_mean, ˟​pd_alt_rand_sd, ˟​pd_alt_obs_z, ˟​pd_alt_obs_c_upper, ˟​pd_alt_obs_c_lower, ˟​pd_alt_obs_q, ˟​pd_alt_obs_p_upper, ˟​pd_alt_obs_p_lower, ˟​rpd_rand_mean, ˟​rpd_rand_sd, ˟​rpd_obs_z, ˟​rpd_obs_c_upper, ˟​rpd_obs_c_lower, ˟​rpd_obs_q, ˟​rpd_obs_p_upper, ˟​rpd_obs_p_lower, #> #   ˟​pe_rand_mean, ˟​pe_rand_sd, ˟​pe_obs_z, ˟​pe_obs_c_upper, ˟​pe_obs_c_lower, ˟​pe_obs_q, ˟​pe_obs_p_upper, ˟​pe_obs_p_lower"},{"path":"https://docs.ropensci.org/canaper/articles/canape.html","id":"classify-endemism","dir":"Articles","previous_headings":"","what":"Classify endemism","title":"CANAPE example","text":"next step CANAPE classify types endemism. full description, see Mishler et al. (2014). short, defines endemic regions based combinations p-values phylogenetic endemism (PE; pe_obs) PE measured alternative tree branch lengths equal (pe_alt). summary borrowed biodiverse blog, modified use variables defined canaper: rpe_obs significantly high palaeo-endemism Else rpe_obs significantly low neo-endemism pe_obs pe_alt_obs highly significant (p < 0.01) super endemism (high paleo neo) Else mixed (mixture paleo, neo nonendemic) Else neither pe_obs pe_alt_obsare significantly high non-endemic cell cpr_classify_endem() carries automatically results cpr_rand_test(), adding factor called endem_type:","code":"acacia_canape <- cpr_classify_endem(acacia_rand_res)  table(acacia_canape$endem_type) #>  #>           mixed             neo not significant           paleo           super  #>              99              12            2783              68              75"},{"path":"https://docs.ropensci.org/canaper/articles/canape.html","id":"classify-significance","dir":"Articles","previous_headings":"","what":"Classify significance","title":"CANAPE example","text":"similar function cpr_classify_endem() available classify significance randomization test, cpr_classify_signif(). Note take data.frame input return data.frame output, “pipe-friendly”. second argument cpr_classify_signif() name biodiversity metric want classify. add column *_signif significance relative random distribution metric. example, cpr_classify_signif(df, \"pd\") add pd_signif column df. can chain together follows:","code":"acacia_canape <-   cpr_classify_endem(acacia_rand_res) |>   cpr_classify_signif(\"pd\") |>   cpr_classify_signif(\"rpd\") |>   cpr_classify_signif(\"pe\") |>   cpr_classify_signif(\"rpe\")  # Take a look at one of the significance classifications: table(acacia_canape$pd_signif) #>  #>          < 0.01          > 0.99 not significant  #>             582              91            2364"},{"path":"https://docs.ropensci.org/canaper/articles/canape.html","id":"visualize-results","dir":"Articles","previous_headings":"","what":"Visualize results","title":"CANAPE example","text":"randomizations classification steps taken care , can now visualize results see match Mishler et al. (2014). Note results identical used different randomization algorithm paper stochasticity random values, well fewer replicates randomization test. Figure 2, showing results randomization test PE, RPE, PE, RPE: Significance results Figure 3, showing results CANAPE: CANAPE results","code":"# Fist do some data wrangling to make the results easier to plot # (add lat/long columns) acacia_canape <- acacia_canape |>   separate(site, c(\"long\", \"lat\"), sep = \":\") |>   mutate(across(c(long, lat), parse_number))  theme_update(   panel.background = element_rect(fill = \"white\", color = \"white\"),   panel.grid.major = element_line(color = \"grey60\"),   panel.grid.minor = element_blank()   )  a <- ggplot(acacia_canape, aes(x = long, y = lat, fill = pd_signif)) +   geom_tile() +   # cpr_signif_cols_2 is a CVD-friendly color palette in canaper   scale_fill_manual(values = cpr_signif_cols_2, name = \"Phylogenetic diversity\") +   guides(fill = guide_legend(title.position = \"top\", label.position = \"bottom\"))  b <- ggplot(acacia_canape, aes(x = long, y = lat, fill = rpd_signif)) +   geom_tile() +   scale_fill_manual(     values = cpr_signif_cols_2, name = \"Relative phylogenetic diversity\"   ) +   guides(fill = guide_legend(title.position = \"top\", label.position = \"bottom\"))  c <- ggplot(acacia_canape, aes(x = long, y = lat, fill = pe_signif)) +   geom_tile() +   scale_fill_manual(values = cpr_signif_cols_2, name = \"Phylogenetic endemism\") +   guides(fill = guide_legend(title.position = \"top\", label.position = \"bottom\"))  d <- ggplot(acacia_canape, aes(x = long, y = lat, fill = rpe_signif)) +   geom_tile() +   scale_fill_manual(     values = cpr_signif_cols_2, name = \"Relative phylogenetic endemism\"   ) +   guides(fill = guide_legend(title.position = \"top\", label.position = \"bottom\"))  a + b + c + d +   plot_annotation(tag_levels = \"a\") & theme(legend.position = \"top\") a <- ggplot(acacia_canape, aes(x = long, y = lat, fill = endem_type)) +   geom_tile() +   # cpr_endem_cols_4 is a CVD-friendly color palette in canaper   scale_fill_manual(values = cpr_endem_cols_4) +   guides(     fill = guide_legend(title.position = \"top\", label.position = \"bottom\")   ) +   theme(legend.position = \"bottom\", legend.title = element_blank())  b <- ggplot(   acacia_canape,   aes(x = pe_alt_obs, y = pe_obs, color = endem_type) ) +   geom_abline(slope = 1, color = \"darkgrey\") +   geom_point() +   scale_color_manual(values = cpr_endem_cols_4) +   labs(     x = \"Phylogenetic endemism on comparison tree\",     y = \"Phylogenetic endemism on actual tree\"   ) +   theme_bw() +   theme(legend.position = \"none\")  a + b + plot_layout(ncol = 1) + plot_annotation(tag_levels = \"a\")"},{"path":[]},{"path":"https://docs.ropensci.org/canaper/articles/how-many-rand.html","id":"a-word-about-randomization-algorithms","dir":"Articles","previous_headings":"","what":"A word about randomization algorithms","title":"How many randomizations?","text":"rich literature choice randomization algorithms ecology (see references ), won’t go much, choice algorithm can large impact results, ’s important understand. described Strona, Ulrich, Gotelli (2018), randomization algorithms can vary degree degree conservation; , closely resemble original data. one extreme, algorithms require row column sums (.e., marginal sums) perfectly preserved original data randomized data (conservative)1; , marginal sums may completely different (less conservative). conservative algorithms less prone type II error prone type error; opposite true less conservative algorithms. Generally want randomization algorithm change one aspect data interested testing. ultimate choice algorithm depend data, ecological conditions, computing restraints. canaper uses vegan package randomizations. large number pre-defined randomization algorithms available vegan2, well option provide user-defined algorithm. details pre-defined algorithm, see vegan::commsim(). vignette, use swap algorithm, “conservative” algorithm preserves marginal sums (Gotelli Entsminger 2003) widely used ecological studies3.","code":""},{"path":"https://docs.ropensci.org/canaper/articles/how-many-rand.html","id":"replicates-vs--iterations","dir":"Articles","previous_headings":"","what":"Replicates vs. iterations","title":"How many randomizations?","text":"proceeding, need clarify terminology. cpr_rand_test() includes two arguments, n_reps n_iterations. sound similar refer two different things. n_reps number random communities simulate. example, n_reps 100, comparing observed value (e.g., phylogenetic diversity, pd_obs), 100 random replicates pd_obs. n_reps low, lack sufficiently statistical power detect patterns data. n_iterations used randomization algorithms, “sequential” algorithms. Sequential algorithms randomize community matrix exchanging values existing cells (“swapping”). might guess, swap algorithm sequential algorithm. One swap single “iteration”. total number iterations, n_iterations, low, randomized matrix won’t sufficiently randomized, still resemble original matrix4. either n_reps n_iterations set high, take overly long finish calculations. goal set sufficiently high achieve proper randomization, high cpr_rand_test() never finishes.","code":""},{"path":"https://docs.ropensci.org/canaper/articles/how-many-rand.html","id":"effect-of-n_iterations","dir":"Articles","previous_headings":"","what":"Effect of n_iterations","title":"How many randomizations?","text":"First, let’s load packages used vignette. Next test effects n_iterations, using test dataset comes canaper (Biodiverse). compare percentage similarity original matrix successive iterations randomized matrix. can done using cpr_iter_sim() function: iter_sim_res() results , can see original community randomized community reach maximum dissimilarity ca. 500–1,000 iterations. , randomized community doesn’t become different additional “mixing”. Note number iterations required vary based dataset. Large matrices many zeros likely take iterations, even still retain relatively high similarity original matrix randomized matrix. recommend exploring data determine minimum number iterations needed. Now ’ve settled number iterations per random replicate (1,000), let’s look number replicates.","code":"library(canaper) # This package library(tictoc) # For timing # For data-wrangling and plotting library(ggplot2) library(dplyr) # Conduct up to 10,000 iterations (swaps), # recording similarity every 10 iterations iter_sim_res <- cpr_iter_sim(   comm = biod_example$comm,   null_model = \"swap\",   n_iterations = 10000,   thin = 10,   seed = 123 )  # Check the output iter_sim_res #> # A tibble: 1,000 × 2 #>    iteration similarity #>        <int>      <dbl> #>  1        10      0.990 #>  2        20      0.981 #>  3        30      0.973 #>  4        40      0.965 #>  5        50      0.957 #>  6        60      0.949 #>  7        70      0.944 #>  8        80      0.938 #>  9        90      0.934 #> 10       100      0.928 #> # … with 990 more rows  # Plot the results ggplot(iter_sim_res, aes(x = iteration, y = similarity)) +   geom_line() +   labs(x = \"Num. iterations\", y = \"% Similarity\")"},{"path":"https://docs.ropensci.org/canaper/articles/how-many-rand.html","id":"effect-of-n_reps","dir":"Articles","previous_headings":"","what":"Effect of n_reps","title":"How many randomizations?","text":"randomizations, “right” answer, can’t test see cpr_rand_test() produces exact answer ’re looking . Rather, check starts converge approximately result n_reps high enough. , compare percentile observed phylogenetic diversity relative random (pd_obs_p_upper, one values used calculating endemism type) pairs random communities generated number replicates5. also time calculations one pair. Next, plot results. Comparison pd_obs_p_upper across runs, 10 reps Comparison pd_obs_p_upper across runs, 100 reps Comparison pd_obs_p_upper across runs, 1,000 reps visualization shows randomization results converge n_reps increases. plots illustrate convergence one particular aspect CANAPE, endemism type ? can look . 1,000 replicates, see high agreement endemism type two randomizations. course, another important consideration long calculations take. can see time increases n_reps, exactly linear fashion. don’t space go benchmarking , illustrates time / n_reps trade-off6.","code":"# Specify a different random seed for each set of randomizations so they give # different, reproducible results  # First set (time these) set.seed(12345) tic() res_10_1 <- cpr_rand_test(   biod_example$comm, biod_example$phy,   null_model = \"swap\",   n_iterations = 1000, n_reps = 10, tbl_out = TRUE ) toc() #> 2.681 sec elapsed tic() res_100_1 <- cpr_rand_test(   biod_example$comm, biod_example$phy,   null_model = \"swap\",   n_iterations = 1000, n_reps = 100, tbl_out = TRUE ) toc() #> 3.672 sec elapsed tic() res_1000_1 <- cpr_rand_test(   biod_example$comm, biod_example$phy,   null_model = \"swap\",   n_iterations = 1000, n_reps = 1000, tbl_out = TRUE ) toc() #> 15.465 sec elapsed  # Second set set.seed(67890) res_10_2 <- cpr_rand_test(   biod_example$comm, biod_example$phy,   null_model = \"swap\",   n_iterations = 1000, n_reps = 10, tbl_out = TRUE ) res_100_2 <- cpr_rand_test(   biod_example$comm, biod_example$phy,   null_model = \"swap\",   n_iterations = 1000, n_reps = 100, tbl_out = TRUE ) res_1000_2 <- cpr_rand_test(   biod_example$comm, biod_example$phy,   null_model = \"swap\",   n_iterations = 1000, n_reps = 1000, tbl_out = TRUE ) # We will make the same plot repeatedly, so write # a quick function to avoid lots of copying and pasting plot_comp <- function(res_1, res_2) {   left_join(     select(res_1, site, pd_obs_p_upper_1 = pd_obs_p_upper),     select(res_2, site, pd_obs_p_upper_2 = pd_obs_p_upper),     by = \"site\"   ) |>     ggplot(aes(x = pd_obs_p_upper_1, y = pd_obs_p_upper_2)) +     geom_point() +     geom_abline(slope = 1, intercept = 0) } plot_comp(res_10_1, res_10_2) + labs(title = \"10 replicates\") plot_comp(res_100_1, res_100_2) + labs(title = \"100 replicates\") plot_comp(res_1000_1, res_1000_2) + labs(title = \"1000 replicates\") # Define a helper function that joins two datasets and calculates % agreement # on endemism type between them calc_agree_endem <- function(df_1, df_2, n_reps) {   left_join(     df_1 |> cpr_classify_endem() |> select(site, endem_type_1 = endem_type),     df_2 |> cpr_classify_endem() |> select(site, endem_type_2 = endem_type),     by = \"site\"   ) |>     mutate(agree = endem_type_1 == endem_type_2) |>     summarize(agree = sum(agree), total = n()) |>     mutate(       p_agree = agree / total,       n_reps = n_reps     ) }  bind_rows(   calc_agree_endem(res_10_1, res_10_2, 10),   calc_agree_endem(res_100_1, res_100_2, 100),   calc_agree_endem(res_1000_1, res_1000_2, 1000), ) #> # A tibble: 3 × 4 #>   agree total p_agree n_reps #>   <int> <int>   <dbl>  <dbl> #> 1   100   127   0.787     10 #> 2   118   127   0.929    100 #> 3   125   127   0.984   1000"},{"path":"https://docs.ropensci.org/canaper/articles/how-many-rand.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"How many randomizations?","text":"case (example dataset comes canaper), see minimum 1,000 random replicates 1,000 swapping iterations per replicate probably needed attain robust results. hope vignette helps determine settings use dataset!","code":""},{"path":[]},{"path":"https://docs.ropensci.org/canaper/articles/parallel.html","id":"how-to-parallelize","dir":"Articles","previous_headings":"","what":"How to parallelize","title":"Parallel computing","text":"canaper uses future package handle parallel computing. future, specification sequential (.e., parallel computing) vs. parallel computing, number CPUs (.e., “cores”) use parallel specified outside functions. easiest see example.","code":""},{"path":"https://docs.ropensci.org/canaper/articles/parallel.html","id":"sequential-mode","dir":"Articles","previous_headings":"How to parallelize","what":"Sequential mode","title":"Parallel computing","text":"First, let’s run analysis default sequential mode (without parallel computing). ’ll use tictoc package time long takes run. Since specified 50 random replicates using parallel computing, cpr_rand_test() calculated various phylogenetic diversity metrics 50 replicates one time.","code":"tic() biod_res_seq <- cpr_rand_test(   biod_example$comm, biod_example$phy,   null_model = \"swap\", n_reps = 50 ) #> Warning: Abundance data detected. Results will be the same as if using presence/absence data (no abundance weighting is used). toc() #> 5.131 sec elapsed"},{"path":"https://docs.ropensci.org/canaper/articles/parallel.html","id":"parallel-mode","dir":"Articles","previous_headings":"How to parallelize","what":"Parallel mode","title":"Parallel computing","text":"trying parallel version, let’s check many CPUs available use: OK, verified multiple cores available parallel computing. enable parallel computing, just add one line cpr_rand_test(): plan(multisession, workers = 2) 1. , multisession, workers = 2 part telling future want use 2 CPUs parallel local machine. See future::plan() options. Otherwise, everything . time, calculations carried 2 batches parallel. significant improvement processing time2. going ?","code":"availableCores() #> system  #>      6 # Set up parallel computing with 2 CPUs plan(multisession, workers = 2)  tic() biod_res_par <- cpr_rand_test(   biod_example$comm, biod_example$phy,   null_model = \"swap\", n_reps = 50 ) #> Warning: Abundance data detected. Results will be the same as if using presence/absence data (no abundance weighting is used). toc() #> 9.136 sec elapsed  # Change back to default sequential mode plan(sequential)"},{"path":"https://docs.ropensci.org/canaper/articles/parallel.html","id":"when-to-parallelize","dir":"Articles","previous_headings":"","what":"When to parallelize?","title":"Parallel computing","text":"Although may seem always good idea speed things using parallel computing, case. computational overhead involved splitting job across multiple processes, coordinating processes, putting everything back together . dataset small, overhead may outweigh simply running analysis sequentially. case biod_example data. Let’s check size dataset: biod_example dataset small entirely made-used testing code (want tests run quickly). Let’s see compares another dataset included canaper, acacia dataset. acacia dataset “real-life” data genus Acacia Australia: Quite bit larger! Let’s see parallel computing works acacia dataset: now start see performance improvements can gained parallel computing!3","code":"# dim() returns number of rows, then columns dim(biod_example$comm) #> [1] 127  31 # dim() returns number of rows, then columns dim(acacia$comm) #> [1] 3037  508 plan(sequential) tic() acacia_res_seq <- cpr_rand_test(   acacia$comm, acacia$phy,   null_model = \"curveball\", n_reps = 100 ) #> Warning: Abundance data detected. Results will be the same as if using presence/absence data (no abundance weighting is used). #> Warning: 'comm' is > 95% absences (zeros). Be sure that 'n_reps' and 'n_iterations' are sufficiently large to ensure adequate mixing of random communities #> Warning: Dropping tips from the tree because they are not present in the community data:  #>  Pararchidendron_pruinosum, Paraserianthes_lophantha toc() #> 107.131 sec elapsed # Run cpr_rand_test() in parallel with 2 CPUs plan(multisession, workers = 2) tic() acacia_par_seq <- cpr_rand_test(   acacia$comm, acacia$phy,   null_model = \"curveball\", n_reps = 100 ) #> Warning: Abundance data detected. Results will be the same as if using presence/absence data (no abundance weighting is used). #> Warning: 'comm' is > 95% absences (zeros). Be sure that 'n_reps' and 'n_iterations' are sufficiently large to ensure adequate mixing of random communities #> Warning: Dropping tips from the tree because they are not present in the community data:  #>  Pararchidendron_pruinosum, Paraserianthes_lophantha toc() #> 90.475 sec elapsed plan(sequential)"},{"path":"https://docs.ropensci.org/canaper/articles/parallel.html","id":"progress-bars","dir":"Articles","previous_headings":"","what":"Progress bars","title":"Parallel computing","text":"’d like track progress cpr_rand_test() real time, can enable progress bar. two ways (neither show webpage, try home!). Similar parallelization, done outside actual function. One way add progressr::handlers(global = TRUE) cpr_rand_test(): way place cpr_rand_test() inside progressr::with_progress() function:","code":"progressr::handlers(global = TRUE)  biod_res_long <- cpr_rand_test(   biod_example$comm, biod_example$phy,   null_model = \"swap\", n_reps = 500 ) progressr::with_progress(   biod_res_long <- cpr_rand_test(     biod_example$comm, biod_example$phy,     null_model = \"swap\", n_reps = 500   ) )"},{"path":"https://docs.ropensci.org/canaper/articles/parallel.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Parallel computing","text":"vignette shows easy enable parallel computing canaper, makes sense . hope helps analyses run faster!","code":""},{"path":"https://docs.ropensci.org/canaper/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joel H. Nitta. Author, maintainer. Shawn W. Laffan. Contributor, data contributor. Brent D. Mishler. Contributor, data contributor. Wataru Iwasaki. Contributor. Klaus Schliep. Reviewer.","code":""},{"path":"https://docs.ropensci.org/canaper/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nitta JH, Iwasaki W. (2021) canaper: Categorical analysis neo- paleo-endemism R. doi: 10.5281/zenodo.5094032","code":"@Manual{,   title = {canaper: Categorical analysis of neo- and paleo-endemism in {R}},   author = {Joel H. Nitta and Wataru Iwasaki},   year = {2021},   url = {https://github.com/ropensci/canaper},   doi = {10.5281/zenodo.5094032}, }"},{"path":"https://docs.ropensci.org/canaper/index.html","id":"canaper-","dir":"","previous_headings":"","what":"Categorical Analysis of Neo- and Paleo-endemism in R","title":"Categorical Analysis of Neo- and Paleo-endemism in R","text":"goal canaper enable categorical analysis neo- paleo-endemism (CANAPE) R. tutorials, see canaper website.","code":""},{"path":"https://docs.ropensci.org/canaper/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Categorical Analysis of Neo- and Paleo-endemism in R","text":"stable version can installed CRAN: development version can installed r-universe github:","code":"install.packages(\"canaper\") # r-universe options(repos = c(   ropensci = \"https://ropensci.r-universe.dev/\",    CRAN = \"https://cran.rstudio.com/\" )) install.packages(\"canaper\", dep = TRUE)  # OR  # github (requires `remotes` or `devtools`) remotes::install_github(\"ropensci/canaper\")"},{"path":"https://docs.ropensci.org/canaper/index.html","id":"example-usage","dir":"","previous_headings":"","what":"Example usage","title":"Categorical Analysis of Neo- and Paleo-endemism in R","text":"examples use dataset Phylocom. dataset includes community (site x species) matrix phylogenetic tree. main “workhorse” function canaper cpr_rand_test(), conducts randomization test determine observed values phylogenetic diversity (PD) phylogenetic endemism (PE) significantly different random. also calculates values alternative phylogeny branch lengths set equal (alternative PD, alternative PE) well ratio original value alternative value (relative PD, relative PE). cpr_rand_test produces lot columns (nine per metric), let’s just look subset : summary columns: *_obs: Observed value *_obs_c_lower: Count times observed value lower random values *_obs_c_upper: Count times observed value higher random values *_obs_p_lower: Percentage times observed value lower random values *_obs_p_upper: Percentage times observed value higher random values *_obs_q: Count non-NA random values used comparison *_obs_z: Standard effect size (z-score) *_rand_mean: Mean random values *_rand_sd: Standard deviation random values next step CANAPE classify endemism types according significance PE, alternative PE, relative PE. adds column called endem_type. data set small, doesn’t include possible endemism types. total, include: paleo: paleoendemic neo: neoendemic significant (says) mixed: mixture paleo neo super: mixed highly significant (p < 0.01) complete example, please see vignette","code":"library(canaper)  data(phylocom)  # Example community matrix including 4 \"clumped\" communities, # one \"even\" community, and one \"random\" community phylocom$comm #>         sp1 sp10 sp11 sp12 sp13 sp14 sp15 sp17 sp18 sp19 sp2 sp20 sp21 sp22 #> clump1    1    0    0    0    0    0    0    0    0    0   1    0    0    0 #> clump2a   1    2    2    2    0    0    0    0    0    0   1    0    0    0 #> clump2b   1    0    0    0    0    0    0    2    2    2   1    2    0    0 #> clump4    1    1    0    0    0    0    0    2    2    0   1    0    0    0 #> even      1    0    0    0    1    0    0    1    0    0   0    0    1    0 #> random    0    0    0    1    0    4    2    3    0    0   1    0    0    1 #>         sp24 sp25 sp26 sp29 sp3 sp4 sp5 sp6 sp7 sp8 sp9 #> clump1     0    0    0    0   1   1   1   1   1   1   0 #> clump2a    0    0    0    0   1   1   0   0   0   0   2 #> clump2b    0    0    0    0   1   1   0   0   0   0   0 #> clump4     0    2    2    0   0   0   0   0   0   0   1 #> even       0    1    0    1   0   0   1   0   0   0   1 #> random     2    0    0    0   0   0   2   0   0   0   0  # Example phylogeny phylocom$phy #>  #> Phylogenetic tree with 32 tips and 31 internal nodes. #>  #> Tip labels: #>   sp1, sp2, sp3, sp4, sp5, sp6, ... #> Node labels: #>   A, B, C, D, E, F, ... #>  #> Rooted; includes branch lengths. set.seed(071421) rand_test_results <- cpr_rand_test(   phylocom$comm, phylocom$phy,   null_model = \"swap\" ) #> Warning: Abundance data detected. Results will be the same as if using #> presence/absence data (no abundance weighting is used). #> Warning: Dropping tips from the tree because they are not present in the community data:  #>  sp16, sp23, sp27, sp28, sp30, sp31, sp32 rand_test_results[, 1:9] #>            pd_obs pd_rand_mean pd_rand_sd  pd_obs_z pd_obs_c_upper #> clump1  0.3018868    0.4692453 0.03214267 -5.206739              0 #> clump2a 0.3207547    0.4762264 0.03263836 -4.763465              0 #> clump2b 0.3396226    0.4681132 0.03462444 -3.710978              0 #> clump4  0.4150943    0.4667925 0.03180131 -1.625660              3 #> even    0.5660377    0.4660377 0.03501739  2.855724            100 #> random  0.5094340    0.4733962 0.03070539  1.173662             79 #>         pd_obs_c_lower pd_obs_q pd_obs_p_upper pd_obs_p_lower #> clump1             100      100           0.00           1.00 #> clump2a            100      100           0.00           1.00 #> clump2b            100      100           0.00           1.00 #> clump4              91      100           0.03           0.91 #> even                 0      100           1.00           0.00 #> random               6      100           0.79           0.06 canape_results <- cpr_classify_endem(rand_test_results)  canape_results[, \"endem_type\", drop = FALSE] #>              endem_type #> clump1  not significant #> clump2a not significant #> clump2b not significant #> clump4  not significant #> even              mixed #> random            mixed"},{"path":"https://docs.ropensci.org/canaper/index.html","id":"comparsion-with-other-software","dir":"","previous_headings":"","what":"Comparsion with other software","title":"Categorical Analysis of Neo- and Paleo-endemism in R","text":"Several R packages available calculate diversity metrics ecological communities. non-exhaustive summary focuses alpha diversity metrics comparison canaper, comprehensive description package. PhyloMeasures: Calculates phylogenetic community diversity metrics including MPD, MNTD, PD, phylosor, unifrac. Null models matrix randomization include uniform, frequency..richness, sequential. phyloregion: Calculates PD MPD MNTD. Implements sparse matrix encoding increase computing speed, used canaper. Null models matrix randomization include tipshuffle, rowwise, colwise. Also performs regionalization based taxonomic phylogenetic beta diversity. picante: Calculates MPD, MNTD, PD, etc. Null models community matrix randomization include frequency, richness, independentswap, trialswap. vegan: Performs large range mostly non-phylogenetic diversity analyses. Includes largest selection null models (> 20), according data type (binary vs. quantitative). canaper uses vegan randomize community matrices. biodiverse: R package, software written perl GUI. Performs calculations needed CANAPE, many metrics (> 300). Includes rand_structured null model well spatially structured null models. None null models currently available R packages AFAIK, except independentswap.","code":""},{"path":"https://docs.ropensci.org/canaper/index.html","id":"other-information","dir":"","previous_headings":"","what":"Other information","title":"Categorical Analysis of Neo- and Paleo-endemism in R","text":"Poster Botany 2021 PDF Video","code":""},{"path":"https://docs.ropensci.org/canaper/index.html","id":"citing-this-package","dir":"","previous_headings":"","what":"Citing this package","title":"Categorical Analysis of Neo- and Paleo-endemism in R","text":"use package, please cite ! example: Nitta JH, Laffan SW, Mishler BD, Iwasaki W. (2021) canaper: Categorical analysis neo- paleo-endemism R. doi: 10.5281/zenodo.5094032 example DOI overall package. latest DOI, use using latest version package:  can find DOIs older versions viewing “Releases” menu right.","code":""},{"path":"https://docs.ropensci.org/canaper/index.html","id":"papers-citing-canaper","dir":"","previous_headings":"","what":"Papers citing canaper","title":"Categorical Analysis of Neo- and Paleo-endemism in R","text":"van Galen et al. 2023. “Correlated evolution ectomycorrhizal host-symbiont system”. New Phytologist https://doi.org/10.1111/nph.18802 Naranjo et al. 2023. “Ancestral area analyses reveal Pleistocene-influenced evolution clade coastal plain endemic plants”. Journal Biogeography 50, 393-405 https://doi.org/10.1111/jbi.14541 Ellepola et al. 2022. “role climate islands species diversification reproductive-mode evolution Old World tree frogs”. Communications Biology 5, 347 https://doi.org/10.1038/s42003-022-03292-1 Lu et al. 2022 “comprehensive evaluation flowering plant diversity conservation priority national park planning China”. Fundamental Research https://doi.org/10.1016/j.fmre.2022.08.008 Nitta et al. 2022 “Spatial phylogenetics Japanese ferns: Patterns, processes, implications conservation”. American Journal Botany 109, 727-745 https://doi.org/10.1002/ajb2.1848","code":""},{"path":"https://docs.ropensci.org/canaper/index.html","id":"contributing-and-code-of-conduct","dir":"","previous_headings":"","what":"Contributing and code of conduct","title":"Categorical Analysis of Neo- and Paleo-endemism in R","text":"Contributions canaper welcome! information, please see CONTRIBUTING.md Please note package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://docs.ropensci.org/canaper/index.html","id":"note-to-developers","dir":"","previous_headings":"","what":"Note to developers","title":"Categorical Analysis of Neo- and Paleo-endemism in R","text":"roxyglobals used maintain R/globals.R, available CRAN. need install package github use @autoglobal @global roxygen tags develop functions globals.","code":""},{"path":"https://docs.ropensci.org/canaper/index.html","id":"licenses","dir":"","previous_headings":"","what":"Licenses","title":"Categorical Analysis of Neo- and Paleo-endemism in R","text":"Code: MIT acacia, biod_example: GNU General Public License v3.0 phylocom: BSD-3-Clause","code":""},{"path":"https://docs.ropensci.org/canaper/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Categorical Analysis of Neo- and Paleo-endemism in R","text":"Mishler, B., Knerr, N., González-Orozco, C. et al. Phylogenetic measures biodiversity neo- paleo-endemism Australian Acacia. Nat Commun 5, 4473 (2014). https://doi.org/10.1038/ncomms5473","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/canaper/reference/acacia.html","id":null,"dir":"Reference","previous_headings":"","what":"Acacia example data — acacia","title":"Acacia example data — acacia","text":"Dataset Australian Acacia Mishler et al. 2014 (Nat. Comm.)","code":""},{"path":"https://docs.ropensci.org/canaper/reference/acacia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Acacia example data — acacia","text":"","code":"acacia"},{"path":"https://docs.ropensci.org/canaper/reference/acacia.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Acacia example data — acacia","text":"list two elements: phy Phylogeny Australian Acacia (list class \"phylo\"). Tip labels specific epithet, except outgroup, includes genus specific epithet. Includes 508 ingroup taxa (genus Acacia) two outgroup taxa. comm Community matrix Australian Acacia (dataframe). Column names specific epithet species. Row names centroids 50km grid cells Australian Albers equal area EPSG:3577 projection. 3037 rows (sites) x 506 columns (species). Data counts, .e., number times species observed grid cell.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/acacia.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Acacia example data — acacia","text":"Mishler, B., Knerr, N., González-Orozco, C. et al. Phylogenetic measures biodiversity neo- paleo-endemism Australian Acacia. Nat Commun 5, 4473 (2014). doi:10.1038/ncomms5473","code":""},{"path":"https://docs.ropensci.org/canaper/reference/acacia.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Acacia example data — acacia","text":"","code":"# Example phylogeny acacia$phy #>  #> Phylogenetic tree with 510 tips and 509 internal nodes. #>  #> Tip labels: #>   Pararchidendron_pruinosum, Paraserianthes_lophantha, adinophylla, semicircinalis, aphanoclada, inaequilatera, ... #>  #> Rooted; includes branch lengths. # Example community acacia$comm[1:5, 1:5] #>                   abbreviata acanthaster acanthoclada acinacea aciphylla #> -1025000:-1825000          0           0            0        0         0 #> -1025000:-1875000          0           0            0        0         0 #> -1025000:-1925000          0           0            0        0         0 #> -1025000:-1975000          0           0            0        0         0 #> -1025000:-2025000          0           0            0        0         0"},{"path":"https://docs.ropensci.org/canaper/reference/biod_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Biodiverse example data — biod_example","title":"Biodiverse example data — biod_example","text":"Fictional data testing purposes Biodiverse.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/biod_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biodiverse example data — biod_example","text":"","code":"biod_example"},{"path":"https://docs.ropensci.org/canaper/reference/biod_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Biodiverse example data — biod_example","text":"list two elements: phy Phylogeny 31 tips comm Community matrix 127 sites 31 species. Data counts, .e., number times species observed grid cell.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/biod_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Biodiverse example data — biod_example","text":"Corresponds community matrix (\"groups\" object) phylogeny Biodiverse example_project.bps.  # nolint","code":""},{"path":"https://docs.ropensci.org/canaper/reference/biod_example.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Biodiverse example data — biod_example","text":"Laffan, S.W., Lubarsky, E. & Rosauer, D.F. (2010) Biodiverse, tool spatial analysis biological related diversity. Ecography. Vol 33, 643-647 (Version 3.1). doi:10.1111/j.1600-0587.2010.06237.x","code":""},{"path":"https://docs.ropensci.org/canaper/reference/biod_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biodiverse example data — biod_example","text":"","code":"# Example phylogeny biod_example$phy #>  #> Phylogenetic tree with 31 tips and 30 internal nodes. #>  #> Tip labels: #>   sp19, sp5, sp15, sp1, sp10, sp26, ... #> Node labels: #>   29___, 28___, 22___, 20___, 19___, 15___, ... #>  #> Rooted; includes branch lengths. # Example community biod_example$comm[1:5, 1:5] #>                 sp1 sp2 sp3 sp4 sp5 #> 1950000:1350000   0   0   0   0   0 #> 1950000:1450000   0   0   0   0   0 #> 2050000:1250000   0   0   0   0   0 #> 2050000:1350000   0   0   0   0   0 #> 2150000:1050000   0   0   0   0   0"},{"path":"https://docs.ropensci.org/canaper/reference/biod_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Output from Biodiverse — biod_results","title":"Output from Biodiverse — biod_results","text":"Output analyzing test data Biodiverse.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/biod_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output from Biodiverse — biod_results","text":"","code":"biod_results"},{"path":"https://docs.ropensci.org/canaper/reference/biod_results.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Output from Biodiverse — biod_results","text":"tibble (dataframe) 127 rows 7 columns. Columns include: site Site name; corresponds row names biod_example$comm pd_biodiv Phylogenetic diversity (PD; PD_P Biodiverse) pd_alt_biodiv Alternative PD (PD measured tree branchlengths equal; PHYLO_RPD_NULL2 Biodiverse) rpd_biodiv Relative PD (PD divided alternative PD; PHYLO_RPD_NULL2 Biodiverse) pe_biodiv Phylogenetic endemism (PE; PE_WE_P Biodiverse) pe_alt_biodiv Alternative PE (PE measured tree branchlengths equal; PHYLO_RPE_NULL2 Biodiverse) rpe_biodiv Relative PE (PE divided alternative PD; PHYLO_RPE2 Biodiverse)","code":""},{"path":"https://docs.ropensci.org/canaper/reference/biod_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Output from Biodiverse — biod_results","text":"example_project.bps # nolint example data set used input,corresponds biod_example dataset package. description Biodiverse metrics, see Biodiverse wiki. # nolint","code":""},{"path":"https://docs.ropensci.org/canaper/reference/biod_results.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Output from Biodiverse — biod_results","text":"Laffan, S.W., Lubarsky, E. & Rosauer, D.F. (2010) Biodiverse, tool spatial analysis biological related diversity. Ecography. Vol 33, 643-647 (Version 3.1). doi:10.1111/j.1600-0587.2010.06237.x","code":""},{"path":"https://docs.ropensci.org/canaper/reference/biod_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Output from Biodiverse — biod_results","text":"","code":"biod_results #> # A tibble: 127 × 7 #>    site    pd_biodiv pd_alt_biodiv rpd_biodiv pe_biodiv pe_alt_biodiv rpe_biodiv #>    <chr>       <dbl>         <dbl>      <dbl>     <dbl>         <dbl>      <dbl> #>  1 195000…    0.0469        0.0690      0.680   0.00661       0.00290      2.28  #>  2 195000…    0.0469        0.0690      0.680   0.00661       0.00290      2.28  #>  3 205000…    0.0931        0.172       0.540   0.00833       0.00504      1.65  #>  4 205000…    0.0469        0.0690      0.680   0.00661       0.00290      2.28  #>  5 215000…    0.0469        0.155       0.302   0.00146       0.00236      0.620 #>  6 215000…    0.0683        0.172       0.396   0.00259       0.00327      0.793 #>  7 215000…    0.0931        0.172       0.540   0.00833       0.00504      1.65  #>  8 225000…    0.0469        0.155       0.302   0.00173       0.00258      0.673 #>  9 225000…    0.0931        0.172       0.540   0.00806       0.00482      1.67  #> 10 225000…    0.182         0.276       0.659   0.0109        0.00755      1.45  #> # ℹ 117 more rows"},{"path":"https://docs.ropensci.org/canaper/reference/canaper-package.html","id":null,"dir":"Reference","previous_headings":"","what":"canaper: Categorical Analysis of Neo- And Paleo-Endemism — canaper-package","title":"canaper: Categorical Analysis of Neo- And Paleo-Endemism — canaper-package","text":"Provides functions analyze spatial distribution biodiversity, particular categorical analysis neo- paleo-endemism (CANAPE) described Mishler et al (2014) doi:10.1038/ncomms5473 . 'canaper' conducts statistical tests determine types endemism occur study area accounting evolutionary relationships species.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/canaper/reference/canaper-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"canaper: Categorical Analysis of Neo- And Paleo-Endemism — canaper-package","text":"Maintainer: Joel H. Nitta joelnitta@gmail.com (ORCID) contributors: Shawn W. Laffan [contributor, data contributor] Brent D. Mishler [contributor, data contributor] Wataru Iwasaki (ORCID) [contributor] Klaus Schliep (ORCID) [reviewer]","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_classify_endem.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify phylogenetic endemism — cpr_classify_endem","title":"Classify phylogenetic endemism — cpr_classify_endem","text":"Given results cpr_rand_test(), classifies phylogenetic endemism according CANAPE scheme Mishler et al. 2014.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_classify_endem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify phylogenetic endemism — cpr_classify_endem","text":"","code":"cpr_classify_endem(df)"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_classify_endem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify phylogenetic endemism — cpr_classify_endem","text":"df Input data frame. Must following columns: pe_obs_p_upper: Upper p-value comparing observed phylogenetic endemism random values pe_alt_obs_p_upper: Upper p-value comparing observed phylogenetic endemism alternate tree random values rpe_obs_p_upper: Upper p-value comparing observed relative phylogenetic endemism random values","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_classify_endem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify phylogenetic endemism — cpr_classify_endem","text":"Object class data.frame column endem_type (character) added. Values endem_type type include paleo (paleoendemic), neo (neoendemic), significant (says), mixed (mixed endemism), super (super-endemic; pe_obs pe_obs_alt highly significant).","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_classify_endem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classify phylogenetic endemism — cpr_classify_endem","text":"summary classification scheme, see: http://biodiverse-analysis-software.blogspot.com/2014/11/canape-categorical-analysis--palaeo.html # nolint","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_classify_endem.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Classify phylogenetic endemism — cpr_classify_endem","text":"Mishler, B., Knerr, N., González-Orozco, C. et al.  (2014) Phylogenetic measures biodiversity neo- paleo-endemism Australian Acacia. Nat Commun, 5: 4473. doi:10.1038/ncomms5473","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_classify_endem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify phylogenetic endemism — cpr_classify_endem","text":"","code":"# \\donttest{ set.seed(12345) data(phylocom) rand_test <- cpr_rand_test(   phylocom$comm, phylocom$phy,   null_model = \"curveball\", metrics = c(\"pe\", \"rpe\"), n_reps = 10 ) #> Warning: Abundance data detected. Results will be the same as if using presence/absence data (no abundance weighting is used). #> Warning: Dropping tips from the tree because they are not present in the community data:  #>  sp16, sp23, sp27, sp28, sp30, sp31, sp32 cpr_classify_endem(rand_test) #>            pe_obs pe_rand_mean pe_rand_sd   pe_obs_z pe_obs_c_upper #> clump1  0.1333333    0.1622013 0.02479597 -1.1642182              1 #> clump2a 0.1081761    0.1563208 0.02319925 -2.0752680              1 #> clump2b 0.1286164    0.1727358 0.02557568 -1.7250565              0 #> clump4  0.1411950    0.1686164 0.02835495 -0.9670758              2 #> even    0.2506289    0.1752201 0.02225572  3.3882887             10 #> random  0.2380503    0.1649057 0.01987926  3.6794464             10 #>         pe_obs_c_lower pe_obs_q pe_obs_p_upper pe_obs_p_lower pe_alt_obs #> clump1               9       10            0.1            0.9  0.1472222 #> clump2a              9       10            0.1            0.9  0.1194444 #> clump2b             10       10            0.0            1.0  0.1420139 #> clump4               8       10            0.2            0.8  0.1454861 #> even                 0       10            1.0            0.0  0.2246528 #> random               0       10            1.0            0.0  0.2211806 #>         pe_alt_rand_mean pe_alt_rand_sd pe_alt_obs_z pe_alt_obs_c_upper #> clump1         0.1596528     0.01541291   -0.8065027                  2 #> clump2a        0.1583681     0.02159578   -1.8023714                  1 #> clump2b        0.1712847     0.01951462   -1.4999435                  0 #> clump4         0.1705556     0.01641871   -1.5268825                  0 #> even           0.1761111     0.01130450    4.2940129                 10 #> random         0.1640278     0.02422894    2.3588646                 10 #>         pe_alt_obs_c_lower pe_alt_obs_q pe_alt_obs_p_upper pe_alt_obs_p_lower #> clump1                   8           10                0.2                0.8 #> clump2a                  9           10                0.1                0.9 #> clump2b                 10           10                0.0                1.0 #> clump4                  10           10                0.0                1.0 #> even                     0           10                1.0                0.0 #> random                   0           10                1.0                0.0 #>           rpe_obs rpe_rand_mean rpe_rand_sd  rpe_obs_z rpe_obs_c_upper #> clump1  0.9056604     1.0167654  0.12496739 -0.8890724               0 #> clump2a 0.9056604     0.9881408  0.08895808 -0.9271831               0 #> clump2b 0.9056604     1.0064227  0.05648438 -1.7838966               0 #> clump4  0.9705048     0.9852723  0.09957128 -0.1483107               6 #> even    1.1156280     0.9946438  0.10702965  1.1303804               9 #> random  1.0762714     1.0140246  0.11480252  0.5422078               7 #>         rpe_obs_c_lower rpe_obs_q rpe_obs_p_upper rpe_obs_p_lower #> clump1               10        10             0.0             1.0 #> clump2a              10        10             0.0             1.0 #> clump2b               9        10             0.0             0.9 #> clump4                4        10             0.6             0.4 #> even                  1        10             0.9             0.1 #> random                3        10             0.7             0.3 #>              endem_type #> clump1  not significant #> clump2a not significant #> clump2b not significant #> clump4  not significant #> even              super #> random            super # }"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_classify_signif.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify statistical significance — cpr_classify_signif","title":"Classify statistical significance — cpr_classify_signif","text":"Given results cpr_rand_test(), classifies statistical significance biodiversity metric. null hypothesis observed value lie extreme random values.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_classify_signif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify statistical significance — cpr_classify_signif","text":"","code":"cpr_classify_signif(df, metric, one_sided = FALSE, upper = FALSE)"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_classify_signif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify statistical significance — cpr_classify_signif","text":"df Input data frame. metric Character vector length 1; selected metric classify significance. May choose pd (phylogenetic diversity), rpd (relative phylogenetic diversity), pe (phylogenetic endemism), rpe (relative phylogenetic endemism) (case-sensitive). one_sided Logical vector length 1; null hypothesis one-sided? TRUE, values classified significant either top 5% bottom 5%. FALSE, values classified significant top 2.5% bottom 2.5%, combined. upper Logical vector length 1; applies one_sided TRUE. TRUE, values top 5% classified significant. FALSE, values bottom 5% classified significant.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_classify_signif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify statistical significance — cpr_classify_signif","text":"Object class data.frame column added statistical significance selected metric. new column name name metric _signif appended. new column character may contain following values, depending null hypothesis: < 0.01, < 0.025, > 0.975, > 0.99, significant (two-sided) < 0.01, < 0.05, > 0.99, > 0.95, significant (one-sided)","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_classify_signif.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classify statistical significance — cpr_classify_signif","text":"metrics like pe, probably want consider one-sided hypothesis testing values upper extreme (.e., interested areas higher expected endemism). , set one_sided = TRUE, upper = TRUE. metrics like pd, probably want consider two-sided hypothesis (.e., interested areas either diverse less diverse expected random). , set one_sided = FALSE.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_classify_signif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify statistical significance — cpr_classify_signif","text":"","code":"# \\donttest{ set.seed(12345) data(phylocom) rand_test <- cpr_rand_test(   phylocom$comm, phylocom$phy,   null_model = \"curveball\", metrics = \"pd\", n_reps = 50 ) #> Warning: Abundance data detected. Results will be the same as if using presence/absence data (no abundance weighting is used). #> Warning: Dropping tips from the tree because they are not present in the community data:  #>  sp16, sp23, sp27, sp28, sp30, sp31, sp32 cpr_classify_signif(rand_test, \"pd\") #>            pd_obs pd_rand_mean pd_rand_sd  pd_obs_z pd_obs_c_upper #> clump1  0.3018868    0.4649057 0.03446764 -4.729621              0 #> clump2a 0.3207547    0.4664151 0.03831667 -3.801488              0 #> clump2b 0.3396226    0.4686792 0.03542398 -3.643198              0 #> clump4  0.4150943    0.4645283 0.03364201 -1.469412              2 #> even    0.5660377    0.4656604 0.02987904  3.359457             50 #> random  0.5094340    0.4716981 0.03073249  1.227881             44 #>         pd_obs_c_lower pd_obs_q pd_obs_p_upper pd_obs_p_lower       pd_signif #> clump1              50       50           0.00           1.00          < 0.01 #> clump2a             50       50           0.00           1.00          < 0.01 #> clump2b             50       50           0.00           1.00          < 0.01 #> clump4              44       50           0.04           0.88 not significant #> even                 0       50           1.00           0.00          > 0.99 #> random               2       50           0.88           0.04 not significant # }"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"CVD-friendly color palette for plotting results of CANAPE — cpr_endem_cols","title":"CVD-friendly color palette for plotting results of CANAPE — cpr_endem_cols","text":"Character vector names corresponding endemism types values corresponding color codes. distinguishable people color vision deficiency (CVD).","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CVD-friendly color palette for plotting results of CANAPE — cpr_endem_cols","text":"","code":"cpr_endem_cols"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CVD-friendly color palette for plotting results of CANAPE — cpr_endem_cols","text":"object class character length 5.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CVD-friendly color palette for plotting results of CANAPE — cpr_endem_cols","text":"Color scheme: paleo: dark blue neo: red significant: beige mixed: green super: yellow","code":""},{"path":[]},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CVD-friendly color palette for plotting results of CANAPE — cpr_endem_cols","text":"","code":"cpr_endem_cols #>           paleo             neo not significant           mixed           super  #>       \"#0072B2\"       \"#D55E00\"       \"#FFFFCC\"       \"#009E73\"       \"#F0E442\"  scales::show_col(cpr_endem_cols)"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols_2.html","id":null,"dir":"Reference","previous_headings":"","what":"CVD-friendly color palette for plotting results of CANAPE, version 2 — cpr_endem_cols_2","title":"CVD-friendly color palette for plotting results of CANAPE, version 2 — cpr_endem_cols_2","text":"Character vector names corresponding endemism types values corresponding color codes. distinguishable people color vision deficiency (CVD).","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CVD-friendly color palette for plotting results of CANAPE, version 2 — cpr_endem_cols_2","text":"","code":"cpr_endem_cols_2"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CVD-friendly color palette for plotting results of CANAPE, version 2 — cpr_endem_cols_2","text":"object class character length 5.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols_2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CVD-friendly color palette for plotting results of CANAPE, version 2 — cpr_endem_cols_2","text":"Color scheme: paleo: dark blue neo: red significant: light grey mixed: green super: yellow","code":""},{"path":[]},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CVD-friendly color palette for plotting results of CANAPE, version 2 — cpr_endem_cols_2","text":"","code":"cpr_endem_cols_2 #>           paleo             neo not significant           mixed           super  #>       \"#0072B2\"       \"#D55E00\"        \"grey90\"       \"#009E73\"       \"#F0E442\"  scales::show_col(cpr_endem_cols_2)"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols_3.html","id":null,"dir":"Reference","previous_headings":"","what":"CVD-friendly color palette for plotting results of CANAPE, version 3 — cpr_endem_cols_3","title":"CVD-friendly color palette for plotting results of CANAPE, version 3 — cpr_endem_cols_3","text":"Character vector names corresponding endemism types values corresponding color codes. distinguishable people color vision deficiency (CVD).","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CVD-friendly color palette for plotting results of CANAPE, version 3 — cpr_endem_cols_3","text":"","code":"cpr_endem_cols_3"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CVD-friendly color palette for plotting results of CANAPE, version 3 — cpr_endem_cols_3","text":"object class character length 5.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols_3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CVD-friendly color palette for plotting results of CANAPE, version 3 — cpr_endem_cols_3","text":"Color scheme: paleo: dark blue neo: red significant: light grey mixed: green super: orange","code":""},{"path":[]},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CVD-friendly color palette for plotting results of CANAPE, version 3 — cpr_endem_cols_3","text":"","code":"cpr_endem_cols_3 #>           paleo             neo not significant           mixed           super  #>       \"#0072B2\"       \"#D55E00\"        \"grey90\"       \"#009E73\"       \"#E69F00\"  scales::show_col(cpr_endem_cols_3)"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols_4.html","id":null,"dir":"Reference","previous_headings":"","what":"CVD-friendly color palette for plotting results of CANAPE, version 4 — cpr_endem_cols_4","title":"CVD-friendly color palette for plotting results of CANAPE, version 4 — cpr_endem_cols_4","text":"Character vector names corresponding endemism types values corresponding color codes. distinguishable people color vision deficiency (CVD).","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CVD-friendly color palette for plotting results of CANAPE, version 4 — cpr_endem_cols_4","text":"","code":"cpr_endem_cols_4"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CVD-friendly color palette for plotting results of CANAPE, version 4 — cpr_endem_cols_4","text":"object class character length 5.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols_4.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CVD-friendly color palette for plotting results of CANAPE, version 4 — cpr_endem_cols_4","text":"Color scheme: paleo: light blue neo: red significant: light grey mixed: green super: yellow","code":""},{"path":[]},{"path":"https://docs.ropensci.org/canaper/reference/cpr_endem_cols_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CVD-friendly color palette for plotting results of CANAPE, version 4 — cpr_endem_cols_4","text":"","code":"cpr_endem_cols_4 #>           paleo             neo not significant           mixed           super  #>       \"#56B4E9\"       \"#D55E00\"        \"grey90\"       \"#009E73\"       \"#E69F00\"  scales::show_col(cpr_endem_cols_4)"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_iter_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate the number of iterations needed to generate a random community that\nis sufficiently different from the original community — cpr_iter_sim","title":"Simulate the number of iterations needed to generate a random community that\nis sufficiently different from the original community — cpr_iter_sim","text":"randomization algorithms involve swapping (iterations), way know -priori many iterations needed sufficiently \"mix\" community data matrix. cpr_iter_sim() records percentage similarity original matrix matrix randomized successive swapping iterations, iteration.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_iter_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate the number of iterations needed to generate a random community that\nis sufficiently different from the original community — cpr_iter_sim","text":"","code":"cpr_iter_sim(   comm,   null_model = \"curveball\",   n_iterations = 100,   thin = 1,   seed = NULL )"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_iter_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate the number of iterations needed to generate a random community that\nis sufficiently different from the original community — cpr_iter_sim","text":"comm Dataframe matrix; input community data sites (communities) rows species columns. Values cell presence/absence (0 1) number individuals (abundance) species site. null_model Character vector length 1 object class commsim; either name model use generating random communities (null model), custom null model. full list available predefined null models, see help file vegan::commsim(), run vegan::make.commsim(). object class commsim can generated vegan::commsim(). n_iterations Numeric vector length 1; maximum number iterations conduct. thin Numeric vector length 1; frequency record percentage similarity original matrix randomized matrix. Results recorded every thin iterations (see Details). seed Integer vector length 1 NULL; random seed used call set.seed() randomizing matrix. Default (NULL) change random generator state.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_iter_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate the number of iterations needed to generate a random community that\nis sufficiently different from the original community — cpr_iter_sim","text":"Tibble (dataframe) following columns: iteration: Number iterations used generate random community similarity: Percentage similarity original community random community","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_iter_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate the number of iterations needed to generate a random community that\nis sufficiently different from the original community — cpr_iter_sim","text":"user inspect results determine number iterations original matrix randomized matrix reach maximum dissimilarity (see Examples). number strongly depend size structure original matrix. Large matrices many zeros likely take iterations, even still retain relatively high similarity original matrix randomized matrix. Available memory may quickly exhausted many (e.g., tens hundreds thousands, ) iterations used thinning large matrices; use thin record portion results save memory. course, cpr_iter_sim() makes sense randomization algorithms use iterations. presence/absence information used calculate percentage similarity community matrices.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_iter_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate the number of iterations needed to generate a random community that\nis sufficiently different from the original community — cpr_iter_sim","text":"","code":"# Simulate generation of a random community with maximum of 10,000 # iterations, recording similarity every 100 iterations (res <- cpr_iter_sim(   comm = biod_example$comm,   null_model = \"swap\",   n_iterations = 10000,   thin = 100,   seed = 123 )) #> # A tibble: 100 × 2 #>    iteration similarity #>        <int>      <dbl> #>  1       100      0.928 #>  2       200      0.896 #>  3       300      0.879 #>  4       400      0.864 #>  5       500      0.860 #>  6       600      0.862 #>  7       700      0.862 #>  8       800      0.856 #>  9       900      0.858 #> 10      1000      0.858 #> # ℹ 90 more rows  # Plot reveals that ca. 1000 iterations are sufficient to # completely mix random community plot(res$iteration, res$similarity, type = \"l\")"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_make_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a palette of colors for plotting CANAPE results — cpr_make_pal","title":"Make a palette of colors for plotting CANAPE results — cpr_make_pal","text":"Palettes can also loaded name directly (see \"colors\" ).","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_make_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a palette of colors for plotting CANAPE results — cpr_make_pal","text":"","code":"cpr_make_pal(name, type)"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_make_pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a palette of colors for plotting CANAPE results — cpr_make_pal","text":"name Character vector length 1; name palette select. Must one 'mishler2014', 'canaper1', 'canaper2', 'canaper3', 'canaper4' type Character vector length 1; type palette select. Must one 'endem' (endemism) 'signif' (p-rank significance)","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_make_pal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a palette of colors for plotting CANAPE results — cpr_make_pal","text":"Named character vector; color hex codes","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_make_pal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a palette of colors for plotting CANAPE results — cpr_make_pal","text":"Palettes name 'mishler2014' correspond colors used Mishler et al. 2014. color scheme widely used show CANAPE results, colors may distinguishable people color vision deficiency (CVD). Palettes name 'canaper1' 'canaper2' based Okabe-Ito palette (endemism; Okabe & Ito 2002) RColorBrewer (significance) CVD-friendly. Names colors correspond either endemism type p-rank output cpr_classify_endem() cpr_classify_signif(), respectively. names available types.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_make_pal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Make a palette of colors for plotting CANAPE results — cpr_make_pal","text":"Mishler, B., Knerr, N., González-Orozco, C. et al.  (2014) Phylogenetic measures biodiversity neo- paleo-endemism Australian Acacia. Nat Commun, 5: 4473. doi:10.1038/ncomms5473 Okabe, M., & Ito, K. (2002) Color Universal Design (CUD) - make figures presentations friendly Colorblind people. J*FLY Data Depository Drosophila Researchers. https://jfly.uni-koeln.de/color/","code":""},{"path":[]},{"path":"https://docs.ropensci.org/canaper/reference/cpr_make_pal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a palette of colors for plotting CANAPE results — cpr_make_pal","text":"","code":"cpr_make_pal(\"mishler2014\", \"endem\") #>             neo           paleo not significant           mixed           super  #>       \"#E73323\"       \"#5577F7\"       \"#FAFAD6\"       \"#BF84F8\"       \"#8E25F6\"  cpr_make_pal(\"canaper1\", \"endem\") #>           paleo             neo not significant           mixed           super  #>       \"#0072B2\"       \"#D55E00\"       \"#FFFFCC\"       \"#009E73\"       \"#F0E442\"  scales::show_col(cpr_make_pal(\"mishler2014\", \"endem\"))"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_rand_comm.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomize a single community matrix — cpr_rand_comm","title":"Randomize a single community matrix — cpr_rand_comm","text":"Note binary null models return binary matrix, even abundance matrix used input.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_rand_comm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomize a single community matrix — cpr_rand_comm","text":"","code":"cpr_rand_comm(comm, null_model, n_iterations = 1, thin = 1, seed = NULL)"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_rand_comm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Randomize a single community matrix — cpr_rand_comm","text":"comm Dataframe matrix; input community data sites (communities) rows species columns. Values cell presence/absence (0 1) number individuals (abundance) species site. null_model Character vector length 1 object class commsim; either name model use generating random communities (null model), custom null model. full list available predefined null models, see help file vegan::commsim(), run vegan::make.commsim(). object class commsim can generated vegan::commsim() (see Examples). n_iterations Numeric vector length 1; number iterations sequential null models. Ignored non-sequential null models. thin Numeric vector length 1; thinning parameter used null models vegan (e.g., quasiswap); ignored models. seed Integer vector length 1 NULL; random seed used call set.seed() randomizing matrix. Default (NULL) change random generator state.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_rand_comm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Randomize a single community matrix — cpr_rand_comm","text":"Matrix","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_rand_comm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Randomize a single community matrix — cpr_rand_comm","text":"","code":"set.seed(12345)  # Check list of available pre-defined null models in vegan vegan::make.commsim() #>  [1] \"r00\"             \"c0\"              \"r0\"              \"r1\"              #>  [5] \"r2\"              \"quasiswap\"       \"greedyqswap\"     \"swap\"            #>  [9] \"tswap\"           \"curveball\"       \"backtrack\"       \"r2dtable\"        #> [13] \"swap_count\"      \"quasiswap_count\" \"swsh_samp\"       \"swsh_both\"       #> [17] \"swsh_samp_r\"     \"swsh_samp_c\"     \"swsh_both_r\"     \"swsh_both_c\"     #> [21] \"abuswap_r\"       \"abuswap_c\"       \"r00_samp\"        \"c0_samp\"         #> [25] \"r0_samp\"         \"r00_ind\"         \"c0_ind\"          \"r0_ind\"          #> [29] \"r00_both\"        \"c0_both\"         \"r0_both\"          # Binary null model produces binary output data(phylocom) cpr_rand_comm(phylocom$comm, \"swap\", 100) #>         sp1 sp10 sp11 sp12 sp13 sp14 sp15 sp17 sp18 sp19 sp2 sp20 sp21 sp22 #> clump1    1    0    0    0    0    0    0    1    1    0   1    0    0    0 #> clump2a   0    1    0    0    0    0    0    1    0    0   1    0    0    1 #> clump2b   1    1    0    1    0    1    0    0    0    0   1    0    0    0 #> clump4    1    0    1    0    0    0    0    1    0    1   1    0    1    0 #> even      1    0    0    0    0    0    0    1    1    0   0    1    0    0 #> random    1    0    0    1    1    0    1    0    0    0   1    0    0    0 #>         sp24 sp25 sp26 sp29 sp3 sp4 sp5 sp6 sp7 sp8 sp9 #> clump1     0    0    0    1   1   0   0   1   0   0   1 #> clump2a    0    1    0    0   1   1   1   0   0   0   0 #> clump2b    0    0    0    0   1   1   0   0   0   0   1 #> clump4     0    0    0    0   0   0   1   0   0   1   0 #> even       1    0    1    0   0   0   0   0   1   0   1 #> random     0    1    0    0   0   1   1   0   0   0   0  # Quantitative null model produces quantitative output cpr_rand_comm(phylocom$comm, \"swap_count\", 100) #>         sp1 sp10 sp11 sp12 sp13 sp14 sp15 sp17 sp18 sp19 sp2 sp20 sp21 sp22 #> clump1    1    0    0    2    1    0    0    0    1    0   0    0    0    0 #> clump2a   1    2    2    0    0    1    0    0    2    0   2    0    0    0 #> clump2b   1    0    0    0    0    0    1    0    0    2   2    1    0    0 #> clump4    0    0    0    0    0    0    0    5    1    0   0    0    0    0 #> even      1    0    0    1    0    0    0    0    0    0   0    1    0    1 #> random    1    1    0    0    0    3    1    3    0    0   1    0    1    0 #>         sp24 sp25 sp26 sp29 sp3 sp4 sp5 sp6 sp7 sp8 sp9 #> clump1     0    0    0    0   1   0   2   0   0   0   0 #> clump2a    0    0    2    0   0   0   0   0   0   0   0 #> clump2b    0    2    0    0   0   1   1   0   0   0   1 #> clump4     1    0    0    0   1   2   0   0   0   1   1 #> even       0    0    0    0   0   0   0   1   1   0   2 #> random     1    1    0    1   1   0   1   0   0   0   0  # How to use a custom null model # 1. Define a randomizing function, e.g. re-sample the matrix while # preserving total number of presences (same as the \"r00\" model) randomizer <- function(x, n, ...) {   array(replicate(n, sample(x)), c(dim(x), n)) }  # 2. Generate a commsim object cs_object <- vegan::commsim(   \"r00_model\",   fun = randomizer, binary = TRUE,   isSeq = FALSE, mode = \"integer\" )  # 3. Generate the null community cpr_rand_comm(phylocom$comm, cs_object, 100) #>         sp1 sp10 sp11 sp12 sp13 sp14 sp15 sp17 sp18 sp19 sp2 sp20 sp21 sp22 #> clump1    0    1    0    0    1    0    1    0    0    0   0    1    0    1 #> clump2a   0    0    0    0    1    0    0    1    1    0   0    0    0    1 #> clump2b   0    0    0    0    0    0    0    0    0    0   1    0    0    0 #> clump4    0    1    1    0    1    1    0    0    0    1   1    1    0    1 #> even      0    0    1    0    1    0    0    1    1    1   1    0    0    1 #> random    1    1    0    0    1    0    0    0    0    0   0    0    0    0 #>         sp24 sp25 sp26 sp29 sp3 sp4 sp5 sp6 sp7 sp8 sp9 #> clump1     1    0    0    1   0   0   0   0   0   0   0 #> clump2a    1    0    0    0   0   0   1   0   1   0   0 #> clump2b    0    0    1    0   1   0   1   1   0   0   0 #> clump4     1    0    0    0   1   0   0   0   0   1   1 #> even       0    0    0    1   0   0   0   0   0   0   1 #> random     0    0    1    1   1   1   0   1   0   0   0"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_rand_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a randomization analysis for one or more biodiversity metrics — cpr_rand_test","title":"Run a randomization analysis for one or more biodiversity metrics — cpr_rand_test","text":"observed value biodiversity metric(s) calculated input community data, compared set random communities. Various statistics calculated comparison (see Value ).","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_rand_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a randomization analysis for one or more biodiversity metrics — cpr_rand_test","text":"","code":"cpr_rand_test(   comm,   phy,   null_model,   n_reps = 100,   n_iterations = 10000,   thin = 1,   metrics = c(\"pd\", \"rpd\", \"pe\", \"rpe\"),   site_col = \"site\",   tbl_out = tibble::is_tibble(comm),   quiet = FALSE )"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_rand_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a randomization analysis for one or more biodiversity metrics — cpr_rand_test","text":"comm Dataframe, tibble, matrix; input community data sites (communities) rows species columns. Either presence-absence data (values 0s 1s) abundance data (values >= 0) accepted, calculations use abundance-weighting, results abundance data converted presence-absence analysis. phy List class phylo; input phylogeny. null_model Character vector length 1 object class commsim; either name model use generating random communities (null model), custom null model. full list available predefined null models, see help file vegan::commsim(), run vegan::make.commsim(). object class commsim can generated vegan::commsim() (see Examples cpr_rand_comm()). n_reps Numeric vector length 1; number random communities replicate. n_iterations Numeric vector length 1; number iterations use sequential null models; ignored non-sequential models. thin Numeric vector length 1; thinning parameter used null models vegan (e.g., quasiswap); ignored models. metrics Character vector; names biodiversity metrics calculate. May include one : pd, rpd, pe, rpe (case-sensitive). site_col Character vector length 1; name column comm contains site names; used comm tibble (object class tbl_df). tbl_out Logical vector length 1; output returned tibble? FALSE, return dataframe. Defaults TRUE comm tibble. quiet Logical vector length 1; TRUE, suppress warnings messages emitted function.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_rand_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a randomization analysis for one or more biodiversity metrics — cpr_rand_test","text":"Dataframe. biodiversity metrics, following 9 columns produced: *_obs: Observed value *_obs_c_lower: Count times observed value lower random values *_obs_c_upper: Count times observed value higher random values *_obs_p_lower: Percentage times observed value lower random values *_obs_p_upper: Percentage times observed value higher random values *_obs_q: Count non-NA random values used comparison *_obs_z: Standard effect size (z-score) *_rand_mean: Mean random values *_rand_sd: Standard deviation random values included pd metrics, output columns include pd_obs, pd_obs_c_lower, etc...","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_rand_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run a randomization analysis for one or more biodiversity metrics — cpr_rand_test","text":"biodiversity metrics (metrics) available analysis include: pd: Phylogenetic diversity (Faith 1992) rpd: Relative phylogenetic diversity (Mishler et al 2014) pe: Phylogenetic endemism (Rosauer et al 2009) rpe: Relative phylogenetic endemism (Mishler et al 2014) (pe rpe needed CANAPE cpr_classify_endem()) choice randomization algorithm (null_model) trivial, may strongly affect results. cpr_rand_test() uses null models provided vegan; complete list, see help file vegan::commsim() run vegan::make.commsim(). One frequently used null model swap (Gotelli & Entsminger 2003), randomizes community matrix preserving column row sums (marginal sums). review various null models, see Strona et al. (2018); swap \"FF\" model sense Strona et al. (2018). Instead using one predefined null models vegan::commsim(), also possible define custom null model; see Examples cpr_rand_comm() Note pre-defined models vegan include binary models (designed presence-absence data) quantitative models (designed abundance data). Although binary models accept abundance data, treat binary always return binary (presence-absence) matrix. PD PE calculations canaper abundance-weighted, return result regardless whether input presence-absence abundance. sense, binary null models appropriate cpr_rand_test(). quantitative models also used abundance data, output treated binary anyways calculating PD PE. effects using binary vs. quantitative null models cpr_rand_test() investigated. minimum 5 species sites required input; fewer likely cause randomization algorithms (e.g., swap) enter infinite loop. Besides, inferences small numbers species /sites recommended generally. following rules apply comm input: dataframe matrix, must include row names (site names) column names (species names). tibble, single column (default, site) must included site names, columns must correspond species names. Column names start number must unique. Row names (site names) must unique. Values (site names) include integers >= 0; non-integer input converted integer. results identical regardless whether input comm abundance presence-absence data (.e., abundance weighting used).","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_rand_test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Run a randomization analysis for one or more biodiversity metrics — cpr_rand_test","text":"Faith DP (1992) Conservation evaluation phylogenetic diversity. Biological Conservation, 61:1–10. doi:10.1016/0006-3207(92)91201-3 Gotelli, N.J. Entsminger, N.J. (2003). Swap algorithms null model analysis. Ecology 84, 532–535. Mishler, B., Knerr, N., González-Orozco, C. et al.  (2014) Phylogenetic measures biodiversity neo- paleo-endemism Australian Acacia. Nat Commun, 5: 4473. doi:10.1038/ncomms5473 Rosauer, D., Laffan, S.W., Crisp, M.D., Donnellan, S.C. Cook, L.G. (2009) Phylogenetic endemism: new approach identifying geographical concentrations evolutionary history. Molecular Ecology, 18: 4061-4072. doi:10.1111/j.1365-294X.2009.04311.x Strona, G., Ulrich, W. Gotelli, N.J. (2018), Bi-dimensional null model analysis presence-absence binary matrices. Ecology, 99: 103-115. doi:10.1002/ecy.2043","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_rand_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a randomization analysis for one or more biodiversity metrics — cpr_rand_test","text":"","code":"# \\donttest{ set.seed(12345) data(phylocom) # Returns a dataframe by defualt cpr_rand_test(   phylocom$comm, phylocom$phy,   null_model = \"curveball\", metrics = \"pd\", n_reps = 10 ) #> Warning: Abundance data detected. Results will be the same as if using presence/absence data (no abundance weighting is used). #> Warning: Dropping tips from the tree because they are not present in the community data:  #>  sp16, sp23, sp27, sp28, sp30, sp31, sp32 #>            pd_obs pd_rand_mean pd_rand_sd  pd_obs_z pd_obs_c_upper #> clump1  0.3018868    0.4622642 0.03799700 -4.220790              0 #> clump2a 0.3207547    0.4679245 0.03182166 -4.624831              0 #> clump2b 0.3396226    0.4698113 0.03009682 -4.325662              0 #> clump4  0.4150943    0.4698113 0.03138358 -1.743490              0 #> even    0.5660377    0.4773585 0.02819687  3.145003             10 #> random  0.5094340    0.4622642 0.02223606  2.121320             10 #>         pd_obs_c_lower pd_obs_q pd_obs_p_upper pd_obs_p_lower #> clump1              10       10              0              1 #> clump2a             10       10              0              1 #> clump2b             10       10              0              1 #> clump4              10       10              0              1 #> even                 0       10              1              0 #> random               0       10              1              0  # Tibbles may be preferable because of the large number of columns cpr_rand_test(   phylocom$comm, phylocom$phy,   null_model = \"curveball\", tbl_out = TRUE, n_reps = 10 ) #> Warning: Abundance data detected. Results will be the same as if using presence/absence data (no abundance weighting is used). #> Warning: Dropping tips from the tree because they are not present in the community data:  #>  sp16, sp23, sp27, sp28, sp30, sp31, sp32 #> # A tibble: 6 × 55 #>   site    pd_obs pd_rand_mean pd_rand_sd pd_obs_z pd_obs_c_upper pd_obs_c_lower #>   <chr>    <dbl>        <dbl>      <dbl>    <dbl>          <dbl>          <dbl> #> 1 clump1   0.302        0.472     0.0308   -5.51               0             10 #> 2 clump2a  0.321        0.464     0.0270   -5.32               0             10 #> 3 clump2b  0.340        0.458     0.0418   -2.85               0             10 #> 4 clump4   0.415        0.475     0.0425   -1.42               0              8 #> 5 even     0.566        0.474     0.0288    3.22              10              0 #> 6 random   0.509        0.472     0.0436    0.866              7              1 #> # ℹ 48 more variables: pd_obs_q <dbl>, pd_obs_p_upper <dbl>, #> #   pd_obs_p_lower <dbl>, pd_alt_obs <dbl>, pd_alt_rand_mean <dbl>, #> #   pd_alt_rand_sd <dbl>, pd_alt_obs_z <dbl>, pd_alt_obs_c_upper <dbl>, #> #   pd_alt_obs_c_lower <dbl>, pd_alt_obs_q <dbl>, pd_alt_obs_p_upper <dbl>, #> #   pd_alt_obs_p_lower <dbl>, rpd_obs <dbl>, rpd_rand_mean <dbl>, #> #   rpd_rand_sd <dbl>, rpd_obs_z <dbl>, rpd_obs_c_upper <dbl>, #> #   rpd_obs_c_lower <dbl>, rpd_obs_q <dbl>, rpd_obs_p_upper <dbl>, … # }"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_signif_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"CVD-friendly color palette for plotting results of randomization test — cpr_signif_cols","title":"CVD-friendly color palette for plotting results of randomization test — cpr_signif_cols","text":"Character vector names corresponding significance levels values corresponding color codes.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_signif_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CVD-friendly color palette for plotting results of randomization test — cpr_signif_cols","text":"","code":"cpr_signif_cols"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_signif_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CVD-friendly color palette for plotting results of randomization test — cpr_signif_cols","text":"object class character length 5.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/canaper/reference/cpr_signif_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CVD-friendly color palette for plotting results of randomization test — cpr_signif_cols","text":"","code":"cpr_signif_cols #>          < 0.01         < 0.025 not significant         > 0.975          > 0.99  #>       \"#E31A1C\"       \"#FB9A99\"       \"#FFFFCC\"       \"#A6CEE3\"       \"#1F78B4\"  scales::show_col(cpr_signif_cols)"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_signif_cols_2.html","id":null,"dir":"Reference","previous_headings":"","what":"CVD-friendly color palette for plotting results of randomization test,\nversion 2 — cpr_signif_cols_2","title":"CVD-friendly color palette for plotting results of randomization test,\nversion 2 — cpr_signif_cols_2","text":"Character vector names corresponding significance levels values corresponding color codes, \"significant\" colored grey.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/cpr_signif_cols_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CVD-friendly color palette for plotting results of randomization test,\nversion 2 — cpr_signif_cols_2","text":"","code":"cpr_signif_cols_2"},{"path":"https://docs.ropensci.org/canaper/reference/cpr_signif_cols_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CVD-friendly color palette for plotting results of randomization test,\nversion 2 — cpr_signif_cols_2","text":"object class character length 5.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/canaper/reference/cpr_signif_cols_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CVD-friendly color palette for plotting results of randomization test,\nversion 2 — cpr_signif_cols_2","text":"","code":"cpr_signif_cols_2 #>          < 0.01         < 0.025 not significant         > 0.975          > 0.99  #>       \"#E31A1C\"       \"#FB9A99\"        \"grey90\"       \"#A6CEE3\"       \"#1F78B4\"  scales::show_col(cpr_signif_cols_2)"},{"path":"https://docs.ropensci.org/canaper/reference/mishler_endem_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Original color palette for plotting results of CANAPE — mishler_endem_cols","title":"Original color palette for plotting results of CANAPE — mishler_endem_cols","text":"Character vector names corresponding endemism types values corresponding color codes. Original palette used Mishler et al. (2014). May distinguishable people color vision deficiency (CVD).","code":""},{"path":"https://docs.ropensci.org/canaper/reference/mishler_endem_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Original color palette for plotting results of CANAPE — mishler_endem_cols","text":"","code":"mishler_endem_cols"},{"path":"https://docs.ropensci.org/canaper/reference/mishler_endem_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Original color palette for plotting results of CANAPE — mishler_endem_cols","text":"object class character length 5.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/mishler_endem_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Original color palette for plotting results of CANAPE — mishler_endem_cols","text":"Color scheme: paleo: blue neo: red significant: beige mixed: light purple super: dark purple","code":""},{"path":"https://docs.ropensci.org/canaper/reference/mishler_endem_cols.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Original color palette for plotting results of CANAPE — mishler_endem_cols","text":"Mishler, B., Knerr, N., González-Orozco, C. et al.  (2014) Phylogenetic measures biodiversity neo- paleo-endemism Australian Acacia. Nat Commun, 5: 4473. doi:10.1038/ncomms5473","code":""},{"path":[]},{"path":"https://docs.ropensci.org/canaper/reference/mishler_endem_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Original color palette for plotting results of CANAPE — mishler_endem_cols","text":"","code":"mishler_endem_cols #>             neo           paleo not significant           mixed           super  #>       \"#E73323\"       \"#5577F7\"       \"#FAFAD6\"       \"#BF84F8\"       \"#8E25F6\"  scales::show_col(mishler_endem_cols)"},{"path":"https://docs.ropensci.org/canaper/reference/mishler_signif_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Original color palette for plotting results of CANAPE — mishler_signif_cols","title":"Original color palette for plotting results of CANAPE — mishler_signif_cols","text":"Character vector names corresponding endemism types values corresponding color codes. Original palette used Mishler et al. (2014). May distinguishable people color vision deficiency (CVD).","code":""},{"path":"https://docs.ropensci.org/canaper/reference/mishler_signif_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Original color palette for plotting results of CANAPE — mishler_signif_cols","text":"","code":"mishler_signif_cols"},{"path":"https://docs.ropensci.org/canaper/reference/mishler_signif_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Original color palette for plotting results of CANAPE — mishler_signif_cols","text":"object class character length 5.","code":""},{"path":"https://docs.ropensci.org/canaper/reference/mishler_signif_cols.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Original color palette for plotting results of CANAPE — mishler_signif_cols","text":"Mishler, B., Knerr, N., González-Orozco, C. et al.  (2014) Phylogenetic measures biodiversity neo- paleo-endemism Australian Acacia. Nat Commun, 5: 4473. doi:10.1038/ncomms5473","code":""},{"path":[]},{"path":"https://docs.ropensci.org/canaper/reference/mishler_signif_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Original color palette for plotting results of CANAPE — mishler_signif_cols","text":"","code":"mishler_signif_cols #>          < 0.01         < 0.025 not significant         > 0.975          > 0.99  #>       \"#7D170E\"       \"#E73323\"       \"#FAFAD6\"       \"#5577F7\"       \"#2E4086\"  scales::show_col(mishler_signif_cols)"},{"path":"https://docs.ropensci.org/canaper/reference/phylocom.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylocom example data — phylocom","title":"Phylocom example data — phylocom","text":"Fictional data testing purposes Phylocom (Webb et al. 2008)","code":""},{"path":"https://docs.ropensci.org/canaper/reference/phylocom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylocom example data — phylocom","text":"","code":"phylocom"},{"path":"https://docs.ropensci.org/canaper/reference/phylocom.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Phylocom example data — phylocom","text":"list three elements: phylo Phylogeny 32 tips sample Community matrix 6 sites (rows) 25 species (columns). traits Trait data; data.frame 32 species (rows) 4 traits (columns)","code":""},{"path":"https://docs.ropensci.org/canaper/reference/phylocom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Phylocom example data — phylocom","text":"Obtained via picante package (Kembel et al. 2010)","code":""},{"path":"https://docs.ropensci.org/canaper/reference/phylocom.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Phylocom example data — phylocom","text":"Webb, C.O., Ackerly, D.D., Kembel, S.W. 2008. Phylocom: software analysis phylogenetic community structure trait evolution. Version 4.0.1. http://www.phylodiversity.net/phylocom/. Kembel, et al. Picante: R tools integrating phylogenies ecology, Bioinformatics 26: 1463–1464 doi:10.1093/bioinformatics/btq166","code":""},{"path":"https://docs.ropensci.org/canaper/reference/phylocom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phylocom example data — phylocom","text":"","code":"# Example phylogeny phylocom$phy #>  #> Phylogenetic tree with 32 tips and 31 internal nodes. #>  #> Tip labels: #>   sp1, sp2, sp3, sp4, sp5, sp6, ... #> Node labels: #>   A, B, C, D, E, F, ... #>  #> Rooted; includes branch lengths. # Example community phylocom$comm #>         sp1 sp10 sp11 sp12 sp13 sp14 sp15 sp17 sp18 sp19 sp2 sp20 sp21 sp22 #> clump1    1    0    0    0    0    0    0    0    0    0   1    0    0    0 #> clump2a   1    2    2    2    0    0    0    0    0    0   1    0    0    0 #> clump2b   1    0    0    0    0    0    0    2    2    2   1    2    0    0 #> clump4    1    1    0    0    0    0    0    2    2    0   1    0    0    0 #> even      1    0    0    0    1    0    0    1    0    0   0    0    1    0 #> random    0    0    0    1    0    4    2    3    0    0   1    0    0    1 #>         sp24 sp25 sp26 sp29 sp3 sp4 sp5 sp6 sp7 sp8 sp9 #> clump1     0    0    0    0   1   1   1   1   1   1   0 #> clump2a    0    0    0    0   1   1   0   0   0   0   2 #> clump2b    0    0    0    0   1   1   0   0   0   0   0 #> clump4     0    2    2    0   0   0   0   0   0   0   1 #> even       0    1    0    1   0   0   1   0   0   0   1 #> random     2    0    0    0   0   0   2   0   0   0   0"},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"canaper-101","dir":"Changelog","previous_headings":"","what":"canaper 1.0.1","title":"canaper 1.0.1","text":"CRAN release: 2023-05-04","code":""},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"documentation-1-0-1","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION","title":"canaper 1.0.1","text":"Fix installation dependencies installing r-universe repo (https://github.com/ropensci/canaper/commit/774d89f58af8c55dda178fff3d324b2e48b749fd) Add warning abundance data, since CANAPE analysis canaper treats presence-absence data. Thanks anonymous reviewer suggestion (https://github.com/ropensci/canaper/commit/143cadee62a9bf3c5256e3d92240c6243bf803e4)","code":""},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"bug-fixes-1-0-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"canaper 1.0.1","text":"Fix internal functions count_higher() count_lower() distinguish NA NA_integer_. Thanks @hadley (Hadley Wickham) (https://github.com/ropensci/canaper/commit/ff6012d6b817d3ba8765d8c8b009e2818da2ab9f)","code":""},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"other-1-0-1","dir":"Changelog","previous_headings":"","what":"OTHER","title":"canaper 1.0.1","text":"Remove tidyverse vignettes Suggests. Thanks @hadley pointing . (https://github.com/ropensci/canaper/commit/49aa94b418ad9e85f30e6f751651386674a367d8)","code":""},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"canaper-100","dir":"Changelog","previous_headings":"","what":"canaper 1.0.0","title":"canaper 1.0.0","text":"CRAN release: 2022-10-04","code":""},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"canaper 1.0.0","text":"Add palettes pr_make_pal() choose palettes (https://github.com/ropensci/canaper/commit/ec624d4c2e85051e4ee5c07143b407de96be7734) Add cpr_iter_sim() help determine number iterations needed randomization algorithms (https://github.com/ropensci/canaper/commit/80a47782706816b8238c318ad596b9da47bfba76)","code":""},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"documentation-1-0-0","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION","title":"canaper 1.0.0","text":"Add logo (https://github.com/ropensci/canaper/commit/1d4232c4597a6ae3167f85afe3efb3d82e462bcd)","code":""},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"canaper-003","dir":"Changelog","previous_headings":"","what":"canaper 0.0.3","title":"canaper 0.0.3","text":"Includes improvements response review ropensci (https://github.com/ropensci/software-review/issues/475)","code":""},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"documentation-0-0-3","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION","title":"canaper 0.0.3","text":"Update README comparisons packages (https://github.com/ropensci/canaper/commit/d8aaf8de5193166d52ab890d8267090ea2f8ef6a) Add link CONTRIBUTING.md README (https://github.com/ropensci/canaper/commit/d8aaf8de5193166d52ab890d8267090ea2f8ef6a) Change Depends: R (>= 3.5.0) Depends: R (>= 4.1.0) DESCRIPTION (https://github.com/ropensci/canaper/commit/0f334965fb5a3fe5034eb1bc682b5051548eddb1) Add @KlausVigo reviewer DESCRIPTION (https://github.com/ropensci/canaper/commit/6e9b3d55202e2294a6436280ca6b01db13d92974)","code":""},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"bug-fixes-0-0-3","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"canaper 0.0.3","text":"Delete redundant checks internal functions (https://github.com/ropensci/canaper/commit/bccd0278dd3de5853680d9979ca26c1aa38a7fb3)","code":""},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"tests-0-0-3","dir":"Changelog","previous_headings":"","what":"TESTS","title":"canaper 0.0.3","text":"Make skipping extended tests default (https://github.com/joelnitta/canaper/blob/76c277490dcecd0f32df351c48c8f8c891674aad/tests/testthat/test-cpr_rand_test.R#L395) Decrease number replicates tests finish faster (https://github.com/ropensci/canaper/commit/12bbe36bf5516a2a63c1235c76234708c4c5432d, https://github.com/ropensci/canaper/commit/f3af4671d679020aeaa97b1a038b3b5a96633f42)","code":""},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"other-0-0-3","dir":"Changelog","previous_headings":"","what":"OTHER","title":"canaper 0.0.3","text":"Import functions phyloregion instead copying (https://github.com/ropensci/canaper/commit/7e8b24950912bfa2a5e10cf4dd9cfa8910d74e76)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"bug-fixes-0-0-2","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"canaper 0.0.2","text":"Fix bug cpr_rand_test() failing return identical results set.seed() parallelization ","code":""},{"path":[]},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"new-features-0-0-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"canaper 0.0.1","text":"Add cpr_rand_comm() function generating random community Implement user-provided community matrix randomization functions","code":""},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"breaking-changes-0-0-1","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"canaper 0.0.1","text":"Use vegan community matrix randomizations instead picante","code":""},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"bug-fixes-0-0-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"canaper 0.0.1","text":"Fix error classification endemism types cpr_classify_endem(), super-endemic cells previously assigned pe_obs_p_upper pe_obs_alt_p_upper highly significant (P > 0.99), requiring highly significant Fix calculation RPD, RPE alternative tree branch lengths converted value, converting non-zero branch lengths value","code":""},{"path":[]},{"path":"https://docs.ropensci.org/canaper/news/index.html","id":"new-features-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"canaper 0.0.0.9000","text":"Initial release github","code":""}]
